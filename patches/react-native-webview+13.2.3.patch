diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
index 4676779..46c837a 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebView.java
@@ -75,6 +75,9 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
     protected boolean hasScrollEvent = false;
     protected boolean nestedScrollEnabled = false;
     protected ProgressChangedFilter progressChangedFilter;
+    private JSONObject allowedDomains;
+    private JSONObject allowedDomainsWithSubdomains;
+
 
     /**
      * WebView must be created with an context of the current activity
@@ -86,6 +89,39 @@ public class RNCWebView extends WebView implements LifecycleEventListener {
         super(reactContext);
         this.createCatalystInstance();
         progressChangedFilter = new ProgressChangedFilter();
+        try {
+            Context context = reactContext.getApplicationContext();
+            InputStream inputStream = context.getResources().openRawResource(R.raw.extras);
+            String jsonString = new Scanner(inputStream).useDelimiter("\\A").next();
+            allowedDomains = new JSONObject(jsonString).getJSONObject("allowedDomains");
+            allowedDomainsWithSubdomains = new JSONObject();
+            Iterator<String> keys = allowedDomains.keys();
+
+            while(keys.hasNext()) {
+                String domain = keys.next();
+                if (allowedDomains.get(domain) instanceof JSONObject) {
+                    JSONObject domainObj = (JSONObject) allowedDomains.get(domain);
+                    if (domainObj.has("subdomains")) {
+                        allowedDomainsWithSubdomains.put(domain, true);
+                    }
+                }
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+
+        allowedDomains = allowedDomains;
+        allowedDomainsWithSubdomains = allowedDomainsWithSubdomains;
+    }
+
+    public static boolean isHostAllowed(JSONObject allowedDomains, JSONObject allowedDomainsWithSubdomains, String host) {
+        boolean exactMatch = allowedDomains.has(host);
+        if (!exactMatch){
+            String[] domainParts = host.split("\\.");
+            String topLevelDomain = domainParts[domainParts.length - 2] + '.' + domainParts[domainParts.length - 1];
+            return allowedDomainsWithSubdomains.has(topLevelDomain);
+        }
+        return true;
     }
 
     public void setIgnoreErrFailedForThisURL(String url) {
diff --git a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java
index 898087e..3c9a4c1 100644
--- a/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java
+++ b/node_modules/react-native-webview/android/src/main/java/com/reactnativecommunity/webview/RNCWebViewClient.java
@@ -89,6 +89,14 @@ public class RNCWebViewClient extends WebViewClient {
         final RNCWebView rncWebView = (RNCWebView) view;
         final boolean isJsDebugging = ((ReactContext) view.getContext()).getJavaScriptContextHolder().get() == 0;
 
+        if(!rncWebView.isHostAllowed(
+            rncWebView.allowedDomains,
+            rncWebView.allowedDomainsWithSubdomains,
+            Uri.parse(url).getHost())
+        ){
+            return true;
+        }
+
         if (!isJsDebugging && rncWebView.mCatalystInstance != null) {
             final Pair<Double, AtomicReference<RNCWebViewModuleImpl.ShouldOverrideUrlLoadingLock.ShouldOverrideCallbackState>> lock = RNCWebViewModuleImpl.shouldOverrideUrlLoadingLock.getNewLock();
             final double lockIdentifier = lock.first;
