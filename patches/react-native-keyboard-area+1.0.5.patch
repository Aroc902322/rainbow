diff --git a/node_modules/react-native-keyboard-area/dist/KeyboardArea.js b/node_modules/react-native-keyboard-area/dist/KeyboardArea.js
index f188b81..f7b07be 100644
--- a/node_modules/react-native-keyboard-area/dist/KeyboardArea.js
+++ b/node_modules/react-native-keyboard-area/dist/KeyboardArea.js
@@ -1,7 +1,38 @@
 import React, { forwardRef, useEffect, useImperativeHandle, useRef, useState, } from 'react';
 import { View } from 'react-native';
 import { RNKeyboard } from './module';
-export const KeyboardArea = forwardRef(({ style, children, isOpen: externalOpen, initialHeight = 250, minHeight = 250, onChange, }, ref) => {
+
+let maxKeyboardHeight = 250;
+export const trackKeyboardMaxHeight = () => {
+  const keyboardHeightChanged = (height) => {
+    if (height > maxKeyboardHeight) {
+      maxKeyboardHeight = height;
+    }
+  }
+  RNKeyboard.addKeyboardListener(keyboardHeightChanged);
+
+  return () => {
+      RNKeyboard.removeKeyboardListener(keyboardHeightChanged);
+  };
+}
+
+export const useKeyboardMaxArea = () => {
+  const [currentHeight, setCurrentHeight] = useState(maxKeyboardHeight);
+
+  useEffect(() => {
+    const keyboardHeightChanged = () => {
+      setCurrentHeight(maxKeyboardHeight)
+    }
+    RNKeyboard.addKeyboardListener(keyboardHeightChanged);
+    return () => {
+        RNKeyboard.removeKeyboardListener(keyboardHeightChanged);
+    };
+  }, []);
+
+  return currentHeight;
+}
+
+export const KeyboardArea = forwardRef(({ style, children, isOpen: externalOpen, initialHeight = 250, minHeight = 250, onChange}, ref) => {
     const isOpen = useRef(false);
     const forceOpen = useRef(false);
     const keyboardHeight = useRef(initialHeight);
