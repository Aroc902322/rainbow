// Generated by @wagmi/cli@1.3.0 on 7/14/2023 at 3:17:01 AM
import {
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// zoraNFTCreator
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export const zoraNftCreatorABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [
      { name: '_implementation', internalType: 'address', type: 'address' },
      {
        name: '_editionMetadataRenderer',
        internalType: 'contract EditionMetadataRenderer',
        type: 'address',
      },
      {
        name: '_dropMetadataRenderer',
        internalType: 'contract DropMetadataRenderer',
        type: 'address',
      },
    ],
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
      {
        name: 'newAdmin',
        internalType: 'address',
        type: 'address',
        indexed: false,
      },
    ],
    name: 'AdminChanged',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'beacon',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'BeaconUpgraded',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'creator',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'editionContractAddress',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'editionSize',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'CreatedDrop',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'previousOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'newOwner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'OwnershipTransferred',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'implementation',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
    ],
    name: 'Upgraded',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'contractVersion',
    outputs: [{ name: '', internalType: 'uint32', type: 'uint32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'defaultAdmin', internalType: 'address', type: 'address' },
      { name: 'editionSize', internalType: 'uint64', type: 'uint64' },
      { name: 'royaltyBPS', internalType: 'uint16', type: 'uint16' },
      {
        name: 'fundsRecipient',
        internalType: 'address payable',
        type: 'address',
      },
      { name: 'setupCalls', internalType: 'bytes[]', type: 'bytes[]' },
      {
        name: 'metadataRenderer',
        internalType: 'contract IMetadataRenderer',
        type: 'address',
      },
      { name: 'metadataInitializer', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'createAndConfigureDrop',
    outputs: [
      {
        name: 'newDropAddress',
        internalType: 'address payable',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'defaultAdmin', internalType: 'address', type: 'address' },
      { name: 'editionSize', internalType: 'uint64', type: 'uint64' },
      { name: 'royaltyBPS', internalType: 'uint16', type: 'uint16' },
      {
        name: 'fundsRecipient',
        internalType: 'address payable',
        type: 'address',
      },
      {
        name: 'saleConfig',
        internalType: 'struct IERC721Drop.SalesConfiguration',
        type: 'tuple',
        components: [
          { name: 'publicSalePrice', internalType: 'uint104', type: 'uint104' },
          {
            name: 'maxSalePurchasePerAddress',
            internalType: 'uint32',
            type: 'uint32',
          },
          { name: 'publicSaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'publicSaleEnd', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleEnd', internalType: 'uint64', type: 'uint64' },
          {
            name: 'presaleMerkleRoot',
            internalType: 'bytes32',
            type: 'bytes32',
          },
        ],
      },
      { name: 'metadataURIBase', internalType: 'string', type: 'string' },
      { name: 'metadataContractURI', internalType: 'string', type: 'string' },
    ],
    name: 'createDrop',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'editionSize', internalType: 'uint64', type: 'uint64' },
      { name: 'royaltyBPS', internalType: 'uint16', type: 'uint16' },
      {
        name: 'fundsRecipient',
        internalType: 'address payable',
        type: 'address',
      },
      { name: 'defaultAdmin', internalType: 'address', type: 'address' },
      {
        name: 'saleConfig',
        internalType: 'struct IERC721Drop.SalesConfiguration',
        type: 'tuple',
        components: [
          { name: 'publicSalePrice', internalType: 'uint104', type: 'uint104' },
          {
            name: 'maxSalePurchasePerAddress',
            internalType: 'uint32',
            type: 'uint32',
          },
          { name: 'publicSaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'publicSaleEnd', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleEnd', internalType: 'uint64', type: 'uint64' },
          {
            name: 'presaleMerkleRoot',
            internalType: 'bytes32',
            type: 'bytes32',
          },
        ],
      },
      { name: 'description', internalType: 'string', type: 'string' },
      { name: 'animationURI', internalType: 'string', type: 'string' },
      { name: 'imageURI', internalType: 'string', type: 'string' },
    ],
    name: 'createEdition',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'dropMetadataRenderer',
    outputs: [
      {
        name: '',
        internalType: 'contract DropMetadataRenderer',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'editionMetadataRenderer',
    outputs: [
      {
        name: '',
        internalType: 'contract EditionMetadataRenderer',
        type: 'address',
      },
    ],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'implementation',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'initialize',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'owner',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'proxiableUUID',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'name', internalType: 'string', type: 'string' },
      { name: 'symbol', internalType: 'string', type: 'string' },
      { name: 'defaultAdmin', internalType: 'address', type: 'address' },
      { name: 'editionSize', internalType: 'uint64', type: 'uint64' },
      { name: 'royaltyBPS', internalType: 'uint16', type: 'uint16' },
      {
        name: 'fundsRecipient',
        internalType: 'address payable',
        type: 'address',
      },
      {
        name: 'saleConfig',
        internalType: 'struct IERC721Drop.SalesConfiguration',
        type: 'tuple',
        components: [
          { name: 'publicSalePrice', internalType: 'uint104', type: 'uint104' },
          {
            name: 'maxSalePurchasePerAddress',
            internalType: 'uint32',
            type: 'uint32',
          },
          { name: 'publicSaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'publicSaleEnd', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleStart', internalType: 'uint64', type: 'uint64' },
          { name: 'presaleEnd', internalType: 'uint64', type: 'uint64' },
          {
            name: 'presaleMerkleRoot',
            internalType: 'bytes32',
            type: 'bytes32',
          },
        ],
      },
      {
        name: 'metadataRenderer',
        internalType: 'contract IMetadataRenderer',
        type: 'address',
      },
      { name: 'metadataInitializer', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'setupDropsContract',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'newOwner', internalType: 'address', type: 'address' }],
    name: 'transferOwnership',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
    ],
    name: 'upgradeTo',
    outputs: [],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'newImplementation', internalType: 'address', type: 'address' },
      { name: 'data', internalType: 'bytes', type: 'bytes' },
    ],
    name: 'upgradeToAndCall',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export const zoraNftCreatorAddress = {
  1: '0xa6a2956fa075d50b021385478A99f3642dAfCc2C',
} as const

/**
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export const zoraNftCreatorConfig = {
  address: zoraNftCreatorAddress,
  abi: zoraNftCreatorABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"contractVersion"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorContractVersion<
  TFunctionName extends 'contractVersion',
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'contractVersion',
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"dropMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorDropMetadataRenderer<
  TFunctionName extends 'dropMetadataRenderer',
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'dropMetadataRenderer',
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"editionMetadataRenderer"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorEditionMetadataRenderer<
  TFunctionName extends 'editionMetadataRenderer',
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'editionMetadataRenderer',
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"implementation"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorImplementation<
  TFunctionName extends 'implementation',
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'implementation',
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"owner"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorOwner<
  TFunctionName extends 'owner',
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'owner',
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"proxiableUUID"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorProxiableUuid<
  TFunctionName extends 'proxiableUUID',
  TSelectData = ReadContractResult<typeof zoraNftCreatorABI, TFunctionName>
>(
  config: Omit<
    UseContractReadConfig<typeof zoraNftCreatorABI, TFunctionName, TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractRead({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'proxiableUUID',
    ...config,
  } as UseContractReadConfig<
    typeof zoraNftCreatorABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorWrite<
  TFunctionName extends string,
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          string
        >['request']['abi'],
        TFunctionName,
        TMode
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<typeof zoraNftCreatorABI, TFunctionName, TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, TFunctionName, TMode>({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"createAndConfigureDrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorCreateAndConfigureDrop<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'createAndConfigureDrop'
        >['request']['abi'],
        'createAndConfigureDrop',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createAndConfigureDrop'
      }
    : UseContractWriteConfig<
        typeof zoraNftCreatorABI,
        'createAndConfigureDrop',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createAndConfigureDrop'
      } = {} as any
) {
  return useContractWrite<
    typeof zoraNftCreatorABI,
    'createAndConfigureDrop',
    TMode
  >({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'createAndConfigureDrop',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"createDrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorCreateDrop<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'createDrop'
        >['request']['abi'],
        'createDrop',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'createDrop' }
    : UseContractWriteConfig<typeof zoraNftCreatorABI, 'createDrop', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createDrop'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'createDrop', TMode>({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'createDrop',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"createEdition"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorCreateEdition<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'createEdition'
        >['request']['abi'],
        'createEdition',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'createEdition'
      }
    : UseContractWriteConfig<
        typeof zoraNftCreatorABI,
        'createEdition',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'createEdition'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'createEdition', TMode>({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'createEdition',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorInitialize<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'initialize'
        >['request']['abi'],
        'initialize',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'initialize' }
    : UseContractWriteConfig<typeof zoraNftCreatorABI, 'initialize', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'initialize'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'initialize', TMode>({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'initialize',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorRenounceOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'renounceOwnership'
        >['request']['abi'],
        'renounceOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      }
    : UseContractWriteConfig<
        typeof zoraNftCreatorABI,
        'renounceOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'renounceOwnership'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'renounceOwnership', TMode>(
    {
      abi: zoraNftCreatorABI,
      address: zoraNftCreatorAddress[1],
      functionName: 'renounceOwnership',
      ...config,
    } as any
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"setupDropsContract"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorSetupDropsContract<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'setupDropsContract'
        >['request']['abi'],
        'setupDropsContract',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'setupDropsContract'
      }
    : UseContractWriteConfig<
        typeof zoraNftCreatorABI,
        'setupDropsContract',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'setupDropsContract'
      } = {} as any
) {
  return useContractWrite<
    typeof zoraNftCreatorABI,
    'setupDropsContract',
    TMode
  >({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'setupDropsContract',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorTransferOwnership<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'transferOwnership'
        >['request']['abi'],
        'transferOwnership',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferOwnership'
      }
    : UseContractWriteConfig<
        typeof zoraNftCreatorABI,
        'transferOwnership',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferOwnership'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'transferOwnership', TMode>(
    {
      abi: zoraNftCreatorABI,
      address: zoraNftCreatorAddress[1],
      functionName: 'transferOwnership',
      ...config,
    } as any
  )
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorUpgradeTo<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'upgradeTo'
        >['request']['abi'],
        'upgradeTo',
        TMode
      > & { address?: Address; chainId?: TChainId; functionName?: 'upgradeTo' }
    : UseContractWriteConfig<typeof zoraNftCreatorABI, 'upgradeTo', TMode> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeTo'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'upgradeTo', TMode>({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorUpgradeToAndCall<
  TMode extends WriteContractMode = undefined,
  TChainId extends number = keyof typeof zoraNftCreatorAddress
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        PrepareWriteContractResult<
          typeof zoraNftCreatorABI,
          'upgradeToAndCall'
        >['request']['abi'],
        'upgradeToAndCall',
        TMode
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      }
    : UseContractWriteConfig<
        typeof zoraNftCreatorABI,
        'upgradeToAndCall',
        TMode
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'upgradeToAndCall'
      } = {} as any
) {
  return useContractWrite<typeof zoraNftCreatorABI, 'upgradeToAndCall', TMode>({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"createAndConfigureDrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorCreateAndConfigureDrop(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraNftCreatorABI,
      'createAndConfigureDrop'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'createAndConfigureDrop',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraNftCreatorABI,
    'createAndConfigureDrop'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"createDrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorCreateDrop(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'createDrop'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'createDrop',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'createDrop'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"createEdition"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorCreateEdition(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'createEdition'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'createEdition',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'createEdition'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"initialize"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorInitialize(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'initialize'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'initialize',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'initialize'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"renounceOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorRenounceOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraNftCreatorABI,
      'renounceOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'renounceOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraNftCreatorABI,
    'renounceOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"setupDropsContract"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorSetupDropsContract(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraNftCreatorABI,
      'setupDropsContract'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'setupDropsContract',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraNftCreatorABI,
    'setupDropsContract'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"transferOwnership"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorTransferOwnership(
  config: Omit<
    UsePrepareContractWriteConfig<
      typeof zoraNftCreatorABI,
      'transferOwnership'
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'transferOwnership',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraNftCreatorABI,
    'transferOwnership'
  >)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"upgradeTo"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorUpgradeTo(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'upgradeTo'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'upgradeTo',
    ...config,
  } as UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'upgradeTo'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `functionName` set to `"upgradeToAndCall"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function usePrepareZoraNftCreatorUpgradeToAndCall(
  config: Omit<
    UsePrepareContractWriteConfig<typeof zoraNftCreatorABI, 'upgradeToAndCall'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return usePrepareContractWrite({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    functionName: 'upgradeToAndCall',
    ...config,
  } as UsePrepareContractWriteConfig<
    typeof zoraNftCreatorABI,
    'upgradeToAndCall'
  >)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraNftCreatorABI}__.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof zoraNftCreatorABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractEvent({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    ...config,
  } as UseContractEventConfig<typeof zoraNftCreatorABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `eventName` set to `"AdminChanged"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorAdminChangedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraNftCreatorABI, 'AdminChanged'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractEvent({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    eventName: 'AdminChanged',
    ...config,
  } as UseContractEventConfig<typeof zoraNftCreatorABI, 'AdminChanged'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `eventName` set to `"BeaconUpgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorBeaconUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraNftCreatorABI, 'BeaconUpgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractEvent({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    eventName: 'BeaconUpgraded',
    ...config,
  } as UseContractEventConfig<typeof zoraNftCreatorABI, 'BeaconUpgraded'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `eventName` set to `"CreatedDrop"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorCreatedDropEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraNftCreatorABI, 'CreatedDrop'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractEvent({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    eventName: 'CreatedDrop',
    ...config,
  } as UseContractEventConfig<typeof zoraNftCreatorABI, 'CreatedDrop'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `eventName` set to `"OwnershipTransferred"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorOwnershipTransferredEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraNftCreatorABI, 'OwnershipTransferred'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractEvent({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    eventName: 'OwnershipTransferred',
    ...config,
  } as UseContractEventConfig<typeof zoraNftCreatorABI, 'OwnershipTransferred'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link zoraNftCreatorABI}__ and `eventName` set to `"Upgraded"`.
 *
 * [__View Contract on Ethereum Etherscan__](https://etherscan.io/address/0xa6a2956fa075d50b021385478A99f3642dAfCc2C)
 */
export function useZoraNftCreatorUpgradedEvent(
  config: Omit<
    UseContractEventConfig<typeof zoraNftCreatorABI, 'Upgraded'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof zoraNftCreatorAddress } = {} as any
) {
  return useContractEvent({
    abi: zoraNftCreatorABI,
    address: zoraNftCreatorAddress[1],
    eventName: 'Upgraded',
    ...config,
  } as UseContractEventConfig<typeof zoraNftCreatorABI, 'Upgraded'>)
}
